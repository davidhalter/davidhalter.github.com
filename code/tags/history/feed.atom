<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Recent Blog Posts</title>
  <id>http://jedidjah.ch/code/feed.atom</id>
  <updated>2014-08-28T00:00:00Z</updated>
  <link href="http://jedidjah.ch/code/" />
  <link href="http://jedidjah.ch/code/feed.atom" rel="self" />
  <subtitle type="text">Recent blog posts</subtitle>
  <generator>Werkzeug</generator>
  <entry xml:base="http://jedidjah.ch/code/feed.atom">
    <title type="text">Purging old git history</title>
    <id>http://jedidjah.ch/code/2014/8/28/purge_old_git_history</id>
    <updated>2014-08-28T00:00:00Z</updated>
    <link href="http://jedidjah.ch/code/2014/8/28/purge_old_git_history" />
    <author>
      <name>David Halter</name>
    </author>
    <content type="html">&lt;p&gt;I have recently come across a situation where I had to purge git history. A
friend of mine has created a repository on top of CPython for good reasons.
However after we decided to move CPython out of &lt;a class="reference external" href="https://github.com/sk-/python-type-annotator/"&gt;his library&lt;/a&gt;, in which case we wouldn't need
the old history anymore.&lt;/p&gt;
&lt;p&gt;So I had set out to do that. It was way more complicated than I expected.
Purging the history is quite easy, you basically follow &lt;a class="reference external" href="http://stackoverflow.com/questions/4515580/how-do-i-remove-the-old-history-from-a-git-repository"&gt;this stackoverflow
post&lt;/a&gt;.
You create a grafts file with the corresponding commit and use filter-branch.&lt;/p&gt;
&lt;p&gt;Be careful though, this &amp;quot;tutorial&amp;quot; will delete your old history permanently. It
will keep the history starting from the commit you make a graft from.
Yes: &lt;strong&gt;Make a backup!&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;du -sh .git
121M    .git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="c"&gt;# Removing the origin just to make sure no reference is kept.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git remote rm origin
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo &lt;/span&gt;21581f18dc98b69c0dad8863d70a0ce7842ce4fe &amp;gt; .git/info/grafts
&lt;span class="nv"&gt;$ &lt;/span&gt;git filter-branch -- --all
Rewrite 4352ea1fb4b0dfa5d28ad26ce6b9e042b126bd60 &lt;span class="o"&gt;(&lt;/span&gt;8/8&lt;span class="o"&gt;)&lt;/span&gt;
Ref &lt;span class="s1"&gt;&amp;#39;refs/heads/master&amp;#39;&lt;/span&gt; was rewritten
&lt;span class="nv"&gt;$ &lt;/span&gt;rm .git/info/grafts
&lt;span class="nv"&gt;$ &lt;/span&gt;du -sh .git
121M    .git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, the repository size is quite big, still. It's basically the same as in
the beginning. Git doesn't just delete old files that don't have a reference
anymore (you have to actually tell it to do that). There are mechanisms to keep
your repository clean (automatic &lt;tt class="docutils literal"&gt;git gc&lt;/tt&gt; after a while, but still we want a
clean repository, now).&lt;/p&gt;
&lt;div class="section" id="removing-old-objects-without-references-from-git-objects"&gt;
&lt;h2&gt;Removing old objects without references from &lt;tt class="docutils literal"&gt;.git/objects&lt;/tt&gt;&lt;/h2&gt;
&lt;p&gt;To actually remove all references to old git objects, you need to do quite a
few things:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Remove the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;filter-branch&lt;/span&gt;&lt;/tt&gt; backup.&lt;/li&gt;
&lt;li&gt;Expire the &lt;tt class="docutils literal"&gt;reflog&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Garbage collect everything&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you forget just &lt;strong&gt;one&lt;/strong&gt; thing you might end up with the old repository size,
because the if reference remains, &lt;tt class="docutils literal"&gt;git gc&lt;/tt&gt; is unable to remove the old
objects. The corresponding stackoverflow post can be found &lt;a class="reference external" href="http://stackoverflow.com/questions/7654822/remove-refs-original-heads-master-from-git-repo-after-filter-branch-tree-filte"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git update-ref -d refs/original/refs/heads/master
&lt;span class="nv"&gt;$ &lt;/span&gt;git reflog expire --expire&lt;span class="o"&gt;=&lt;/span&gt;now --all
&lt;span class="nv"&gt;$ &lt;/span&gt;git gc --prune&lt;span class="o"&gt;=&lt;/span&gt;now --aggressive
&lt;span class="nv"&gt;$ &lt;/span&gt;du -sh .git
164K    .git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;164K&lt;/em&gt;: Win.&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>

